name: Deploy func-asr-scan

on:
  push:
    branches: [ "main" ]
    paths:
      - "apps/func-asr-scan/**"
      - ".github/workflows/deploy-func-asr-scan.yml"
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  APP_NAME: func-asr-scan
  APP_RG: rg-asr-scan
  DOTNET_VERSION: "8.0.x"
  PROJECT_DIR: apps/func-asr-scan
  PROJECT_FILE: apps/func-asr-scan/func-asr-scan.csproj
  AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
  AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
  AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: List repo files (debug)
        run: |
          pwd
          ls -la
          find . -maxdepth 4 -type f -name "*.csproj" -o -name "host.json" -o -name "Program.cs"

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore (project only)
        run: dotnet restore "${{ env.PROJECT_FILE }}"

      - name: Build (Release)
        run: dotnet build "${{ env.PROJECT_FILE }}" --configuration Release --no-restore

      - name: Publish (zip)
        run: dotnet publish "${{ env.PROJECT_FILE }}" --configuration Release -o "${{ env.PROJECT_DIR }}/published" --no-build

      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id:  ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Azure Function
        uses: azure/functions-action@v1
        with:
          app-name: ${{ env.APP_NAME }}
          package: ${{ env.PROJECT_DIR }}/published